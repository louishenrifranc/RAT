#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<fcntl.h>
#include<sys/stat.h>

#include"hacking.h"


/**
Ecrire dans un fichier
**/

void *errorAllocate_malloc(int);
void fatal(char *);


int main(int arg_count,char * argtab[]){


  int fd;   // Descripteur de fichier
  char* buffer, * datafile;

    buffer= (char *) errorAllocate_malloc(100); // Un buffer pour sauvegarder le message a enregistrer
    datafile=(char *) errorAllocate_malloc(20); // Le nom du fichier

    strcpy(datafile,"windows.txt");
    strcpy(buffer,"Yoest e uqe le fichier ca marche");

    strncat(buffer,"\n",1);     //Ajoute a la fin un retour a la ligne, si l'on veut ré-écrire après

    if( arg_count < 2){

        printf("Usage : %s <data to add to %s>\n",argtab[0],datafile);
    }


    fd=open(datafile,O_WRONLY|O_CREAT|O_APPEND,S_IRUSR|S_IWUSR);        //O_WRONGLY en ecriture seule
                                                                        //O_CREAT crée le fichier si il n'existe pas deja
                                                                        //O_APPEND: ajotuer a la fin du fichier

                                                                        //S_IRUSR : autorisation de lecture a l'utilisateur
                                                                        //S_IWUSR autorisation d'ecriture de l'utilisateur


    if(fd==-1){
        fatal("Error while opening the file");                          //Le descripteur de fichier retourne -1 si il n'a pas pu ouvrir correctement le fichier
    }

    printf("\t [DEBUG] file descriptor is %d\n",fd);                    //Pour le debug

    // Ecrire des données

    if(write(fd,buffer,strlen(buffer)) == -1){                              //Pareil que pour l'ecriture
        fatal("Error while writing in the file");
    }

    //Ferme le fichier

    if(close(fd) == -1){
        fatal("Error while closing the files");

    }




}
